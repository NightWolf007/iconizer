{{- with (datasource "data") -}}
{{ $font := .font | strings.CamelCase }}
{{ $fontTitle := $font | strings.Title }}
// Code generated by gomplate; DO NOT EDIT.
// This file generated by gomplate at
// {{ (time.Now).UTC.Format time.RFC1123 }}
// using data from datafiles/{{ .font | strings.SnakeCase }}.json
package icons

import (
	"path/filepath"
)

var {{ $font }}DefaultIcon = Icon{ {{ printf "%q" .default.symbol }}, {{ .default.color }} }

var {{ $font }}IconsMap = map[string]Icon{
{{- range $key, $value := .filetypes }}
	"{{ $key }}": Icon{ {{ printf "%+q" $value.symbol }}, {{ $value.color }} },
{{- end }}
}

// Get{{ $fontTitle }}Icon returns icon by filetype for {{ .font }} font
func Get{{ $fontTitle }}Icon(filename string) Icon {
	baseFilename := filepath.Base(filename)
	if icon, ok := {{ $font }}IconsMap[baseFilename]; ok {
		return icon
	}

	ext := filepath.Ext(filename)
	if ext == "" {
		return {{ $font }}DefaultIcon
	}

	if icon, ok := {{ $font }}IconsMap[ext]; ok {
		return icon
	}
	return {{ $font }}DefaultIcon
}
{{- end }}
